# BUILD IMAGE
docker-compose build

# UP CONTAINERS
  docker-compose up

  detach mode:
  docker-compose up -d

# BUILD IMAGE AND UP CONTAINER (kod değişikliğinde böyle kaldır)
docker-compose up -d --build

# DOWN & DELETE CONTAINERS (volumes are safe)
  docker-compose down

# BUILD IMAGE NOT RUN CONTAINER
  docker-compose up build 

# DISPLAY CONTAINERS
    docker ps -a

# GET INTO CONTAINER
    docker exec -it php-container /bin/bash

# DISPLAY IMAGES
    docker images -a

# STOP AND DELETE CONTAINER
    docker stop static-php-container

# DELETE IMAGE
    docker rmi static-php-image
    

###########################

RUN apt-get update && apt-get install -y \
    git \
    curl \
    zip \
    unzip\

========================================================================
# DOCKER COMPOSE 

  # aynı makine içerisinde multicontainer çalıştırmak için
  # servisler default olarak --rm ve -d olarak çalışıyor eklemeye gerek yok
  # networke gerek yok çünkü aynı networkde yaratıyor

  docker-compose.yaml

  version: "3.8"
  services:
    mongodbBenimKoyduğumİsim:
      image: 'mongo'
      volumes:
        - data:data/db
      environment:
        - MONGO_NAME: ahmet
        - MONGO_PW: secret
  #    env_file:
  #     - ./env
      contianer_name: mongo-container
      
    backend:
      build: ./backend
      #  build:
      #    context: ./backend
      #    dockerfile: Dockerfile
      #    args: 
      #      some-arg: 1
      ports:
        - "3000:80"
      volumes:
        - logs:/app/logs 
        - C..........

    frontend:
      build: ./frontend
      depends_on:
        - mongodbBenimKoyduğumİsim
      ports: 
        - '3000:3000'
      volumes:
      - ./frontend/src:/app/src
      stdin_open: true
      tty: true

  volumes: 
    data:
    logs:
  ========================================================================

  # up
  docker-compose up
  docker-compose up -d

  # container'ları çalıştırmaz
  docker-compose up build 

  # down delete contianer (volumes are safe)
  docker-compose down



